
	class memManager_t
	{
		public:

			~memManager_t();               //destructor?
			memManager_t(memManager_t& mem)//copy contructor
			getCurrPose()                  //get current position
			setCurrPose()		           //set currnet position
			writtenBytes()                 //how many bytes are written, including: is memory is empty
			readFromCurrPose()             //read from current position
			readFromUserPose()             //read from user position
			writeFromCurrPose()            //write from current position
			writeFromCurrPose()            //write from user position

		private:

		protected:

	};

	class memPage_t
	{
		public:
			~memPage_t();                   //destructor?
			getCurrPose()                   //get current position in memory buffer
			setCurrPose()		            //set currnet position in memory buffer
			writtenBytes() 		            //is page empty? is page full? actual size of the page ( how many bytes really written in 										  page)?capacity of the page ( length )
			readFromCurrPose()              //read from current position
			readFromUserPose()              //read from user position
			writeFromCurrPose()             //write from current position
			writeFromCurrPose()             //write from user position

			/*self*/ insert defalt size     //insert default size of bytes. floor/ceil to power of 2
			/*self*/ memPage_t();           //CTOR
			/*self*/ forbid copy CTOR

		private:
			size                            //size of bytes
			length of page                  //length of page
		protected:
	};






